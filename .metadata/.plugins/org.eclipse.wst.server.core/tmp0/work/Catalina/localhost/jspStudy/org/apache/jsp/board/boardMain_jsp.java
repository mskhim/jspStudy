/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.97
 * Generated at: 2024-12-10 01:49:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import co.kh.dev.board.model.BoardDAO;
import co.kh.dev.board.model.BoardVO;
import java.util.ArrayList;
import co.kh.dev.common.MyUtility;

public final class boardMain_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/member/memberLogin.jsp", Long.valueOf(1733734817087L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(6);
    _jspx_imports_classes.add("co.kh.dev.common.MyUtility");
    _jspx_imports_classes.add("co.kh.dev.board.model.BoardVO");
    _jspx_imports_classes.add("co.kh.dev.board.model.BoardDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

BoardDAO bDAO = new BoardDAO();
int viewTime = 10;
int pageNum = 1;
if (request.getParameter("viewTime") != null) {
	viewTime = Integer.parseInt(request.getParameter("viewTime"));
}
if (request.getParameter("pageNum") != null) {
	pageNum = Integer.parseInt(request.getParameter("pageNum"));
}
ArrayList<BoardVO> bList = new ArrayList<BoardVO>();
bList = bDAO.selectDB();//전체 db를 출력
int recordCount = bDAO.selectRecordDB();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\" />\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n");
      out.write("<title>Document</title>\r\n");
      out.write("<script src=\"https://kit.fontawesome.com/6ff644124c.js\"	crossorigin=\"anonymous\"></script>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/board/css/allCss.jsp", out, false);
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".participation:nth-of-type(2) {\r\n");
      out.write("	background-color: #4a4a4a; /* 짙은 회색 */\r\n");
      out.write("	color: white; /* 텍스트 흰색 */\r\n");
      out.write("	font-weight: bold; /* 텍스트 굵게 */\r\n");
      out.write("	margin: 0px 10px;\r\n");
      out.write("}\r\n");
      out.write("li a.pageNumber:nth-of-child(1) {\r\n");
      out.write("	background-color: rgb(114, 114, 114);\r\n");
      out.write("	color: white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("		");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/board/carousel.jsp", out, false);
      out.write("\r\n");
      out.write("	</header>\r\n");
      out.write("	<main>\r\n");
      out.write("		<section>\r\n");
      out.write("			<article class=\"article1\" align=\"center\">\r\n");
      out.write("				<div class=\"head\">\r\n");
      out.write("					<h1>칭찬합시다</h1>\r\n");
      out.write("				</div>\r\n");
      out.write("				<div class=\"head\">\r\n");
      out.write("					<ul>\r\n");
      out.write("						<a href=\"\"><li><i class=\"fa-solid fa-house\"></i></li></a>\r\n");
      out.write("						<a href=\"\"><li>국립공원공단 ></li></a>\r\n");
      out.write("						<a href=\"\"><li>국민소통 ></li></a>\r\n");
      out.write("						<a href=\"\"><li>국민참여 ></li></a>\r\n");
      out.write("						<a href=\"\"><li>칭찬합시다</li></a>\r\n");
      out.write("					</ul>\r\n");
      out.write("				</div>\r\n");
      out.write("			</article>\r\n");
      out.write("			<article class=\"article2\">\r\n");
      out.write("				<p class=\"notice\">- 본 게시판과 관련이 없거나 상업적인 내용, 특정인이나 특정사안을 비방하는 내용\r\n");
      out.write("					등은 예고없이 삭제될 수 있습니다.</p>\r\n");
      out.write("			</article>\r\n");
      out.write("			<article class=\"article3\">\r\n");
      out.write("				<div class=\"all\">\r\n");
      out.write("					<form method=\"get\" action=\"/jspStudy/boardViewTimeServlet.do\">\r\n");
      out.write("						<select name=\"viewTime\" id=\"view\">\r\n");
      out.write("							<option value=\"10\">10개씩</option>\r\n");
      out.write("							<option value=\"20\">20개씩</option>\r\n");
      out.write("						</select>\r\n");
      out.write("						<button type=\"submit\" id=\"BoardViewButton\">보기</button>\r\n");
      out.write("					</form>\r\n");
      out.write("					<form method=\"get\" action=\"boardFind.do\">\r\n");
      out.write("						<select name=\"find\" id=\"find\">\r\n");
      out.write("							<option value=\"1\">제목</option>\r\n");
      out.write("							<option value=\"2\">내용</option>\r\n");
      out.write("						</select> <input type=\"text\" name=\"findText\" id=\"findText\" />\r\n");
      out.write("						<button type=\"button\" id=\"findButton\">검색</button>\r\n");
      out.write("					</form>\r\n");
      out.write("				</div>\r\n");
      out.write("			</article>\r\n");
      out.write("			<article class=\"article4\">\r\n");
      out.write("				<table>\r\n");
      out.write("					<tr>\r\n");
      out.write("						<th>번호</th>\r\n");
      out.write("						<th>공원명</th>\r\n");
      out.write("						<th width=\"300\">제목</th>\r\n");
      out.write("						<th>작성자</th>\r\n");
      out.write("						<th>조회수</th>\r\n");
      out.write("						<th>등록일</th>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					int viewNum = viewTime;
					if ((recordCount - (pageNum) * viewTime) < 0) {
						viewNum = recordCount % viewTime;
					}
					for (int i = 1; i <= viewNum; i++) {//viewTime 개수만큼 보여주고 num같은경우는 pageNum을 이용해서 원하는 번호가 출력되게 만들어야함.
						int num = recordCount - i - ((pageNum - 1) * viewTime);
					
      out.write("\r\n");
      out.write("					<tr>\r\n");
      out.write("						<td class=\"tbNum\">");
      out.print(bList.get(num).getRownum());
      out.write("</td>\r\n");
      out.write("						<td class=\"tbName\">북한산</td>\r\n");
      out.write("						<td class=\"tbMain\"><a\r\n");
      out.write("							href=\" ");
      out.print(request.getContextPath());
      out.write("/board/boardWriteInside.jsp?rowNum=");
      out.print(num + 1);
      out.write('"');
      out.write('>');
      out.print(bList.get(num).getTitle());
      out.write("</a></td>\r\n");
      out.write("						<td class=\"tbWriter\">");
      out.print(bList.get(num).getName());
      out.write("</td>\r\n");
      out.write("						<td class=\"tbView\">");
      out.print(bList.get(num).getCount());
      out.write("</td>\r\n");
      out.write("						<td class=\"tbDate\">");
      out.print(bList.get(num).getSubdate());
      out.write("</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					");

					}
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("				</table>\r\n");
      out.write("			</article>\r\n");
      out.write("			<article class=\"article5\">\r\n");
      out.write("					<ul>\r\n");
      out.write("						<a href=\"#\">\r\n");
      out.write("							<li><i class=\"fa-solid fa-angles-left\"></i></li>\r\n");
      out.write("						</a>\r\n");
      out.write("						<a href=\"#\">\r\n");
      out.write("							<li><i class=\"fa-solid fa-angle-left\"></i></li>\r\n");
      out.write("						</a>\r\n");
      out.write("						");

						int pgNum = recordCount / viewTime + 1;
						int pageEndNum = 10;
						int pageStartNum = 1;
						if (pgNum > 10) {
							pageEndNum = 10;
						}else{
							pageEndNum = pgNum;
						}
						for (int i = pageStartNum; i <= pageEndNum; i++) {
						
      out.write("\r\n");
      out.write("						<li>\r\n");
      out.write("						<a class=\"pageNumber\" href=\"");
      out.print( request.getRequestURI());
      out.write("?pageNum=");
      out.print(i);
      out.write("&viewTime=");
      out.print(viewTime);
      out.write("\">\r\n");
      out.write("						");
      out.print(i);
      out.write("\r\n");
      out.write("						</a>\r\n");
      out.write("						</li>\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("						<a href=\"#\">\r\n");
      out.write("							<li><i class=\"fa-solid fa-chevron-right\"></i></li>\r\n");
      out.write("						</a>\r\n");
      out.write("						<a href=\"#\">\r\n");
      out.write("							<li><i class=\"fa-solid fa-angles-right\"></i></li>\r\n");
      out.write("						</a>\r\n");
      out.write("					</ul>\r\n");
      out.write("\r\n");
      out.write("				<form action=\"#\" method=\"get\" name=\"boardWrite.do\">\r\n");
      out.write("					<button type=\"button\" id=\"writeButton\"\r\n");
      out.write("						onclick=\"location.href='/jspStudy/board/boardWrite.jsp';\">글쓰기</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</article>\r\n");
      out.write("		</section>\r\n");
      out.write("	\r\n");
      out.write("		<section class=\"loginSection\">\r\n");
      out.write("		");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>로그인</title>\r\n");
      out.write(" <link rel=\"stylesheet\" href=\"./member.css\" />\r\n");
      out.write("</head>\r\n");
      out.write("<html>\r\n");

String name = (String) session.getAttribute("name");
if (MyUtility.isNullOrEmpty(name)) {

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	 <script>\r\n");
      out.write("	");
if(request.getParameter("error")!=null&&request.getParameter("error").equals("2")){ 
      out.write("\r\n");
      out.write("            alert(\"아이디 또는 비밀번호가 맞지 않습니다.\");\r\n");
      out.write("	");
} else{ if(request.getParameter("error")!=null&&request.getParameter("error").equals("1")){ 
      out.write("\r\n");
      out.write("            alert(\"비밀번호가 맞지 않습니다.\");\r\n");
      out.write("	\r\n");
      out.write("	");
}}  
      out.write("\r\n");
      out.write("   </script>\r\n");
      out.write("	<form method=\"post\" action=\"/jspStudy/memberloginCheckServlet.do\">\r\n");
      out.write("		<table align=\"center\">\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th >아이디</th>\r\n");
      out.write("				<td >&nbsp;<input type=\"text\" name=\"id\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("			<tr>\r\n");
      out.write("				<th>비밀번호</th>\r\n");
      out.write("				<td>&nbsp;<input type=\"password\" name=\"pwd\"></td>\r\n");
      out.write("			</tr>\r\n");
      out.write("		</table>\r\n");
      out.write("		<div class=\"buttons\">\r\n");
      out.write("			<a href=\"/jspStudy/member/memberRegist.jsp\"><input type=\"button\"\r\n");
      out.write("						value=\"회원가입\"></a> &nbsp; &nbsp; <input type=\"submit\"\r\n");
      out.write("					value=\"로그인\">\r\n");
      out.write("			</div>\r\n");
      out.write("	</form>\r\n");
      out.write("</body>\r\n");

} else {

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("	<table border=\"1\" width=\"300\" align=\"center\">\r\n");
      out.write("		<tr>\r\n");
      out.write("			<td width=\"300\" align=\"center\">");
      out.print(name);
      out.write(" 님 로그인 되었습니다.</td>\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	<div class=\"buttons\">\r\n");
      out.write("	<a href=\"/jspStudy/member/memberMyPage.jsp\"><input type=\"button\"\r\n");
      out.write("						value=\"마이페이지\"></a>\r\n");
      out.write("				&nbsp;&nbsp;<a href=\"/jspStudy/board/boardMain.jsp\"><input type=\"button\"\r\n");
      out.write("						value=\"게시판\"></a>\r\n");
      out.write("				&nbsp;&nbsp; <a href=\"/jspStudy/memberLogoutServlet.do\"><input type=\"button\"\r\n");
      out.write("						value=\"로그아웃\"></a>\r\n");
      out.write("		</div>\r\n");
      out.write("</body>\r\n");

}

      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("		</section>\r\n");
      out.write("	</main>\r\n");
      out.write("	<footer>\r\n");
      out.write("	<section>\r\n");
      out.write("	<h1>footer</h1>\r\n");
      out.write("	</section>\r\n");
      out.write("	</footer>\r\n");
      out.write("	<script src=\"./js/board.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
